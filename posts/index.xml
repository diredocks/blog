<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 池塘</title>
    <link>https://diredocks.github.io/blog/posts/</link>
    <description>Recent content in Posts on 池塘</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 29 Apr 2024 00:24:03 +0800</lastBuildDate>
    <atom:link href="https://diredocks.github.io/blog/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>在 Pixelbook Go 上安装 AOSC 的坑 feat.我的碎碎念</title>
      <link>https://diredocks.github.io/blog/posts/pixelbook-go-with-aosc/</link>
      <pubDate>Mon, 29 Apr 2024 00:24:03 +0800</pubDate>
      <guid>https://diredocks.github.io/blog/posts/pixelbook-go-with-aosc/</guid>
      <description>这标题好长（）&#xA;安装程序分区卡住 目前安装程序 Deploykit 会在清除磁盘后报错，重启再进安装镜像方可解决这个问题。&#xA;修复声音/键盘映射 参考： WeirdTreeThing/chromebook-linux-audio 和 WeirdTreeThing/cros-keyboard-map AOSC OS 的兼容性还是不错的，跑的脚本没有经过更改，直接依照指导运行就能生效。&#xA;修复 Assistant 键 上面的脚本不能修复谷歌助理键，就是普通笔记本上 Meta 键位置上的按键，查看 dmesg 可以发现是内核不知道该怎么映射这个键，很简单，用 sudo showkey ，按下你需要映射到的键位的同时，你应该就能看到对应的键位值，然后使用 sudo setkeycodes e058 &amp;lt;你需要的键位值&amp;gt; 即可完成映射。&#xA;后记 其实很早之前就听闻 AOSC, 只不过那时我玩 Linux 还不熟练，并不是目标用户。&#xA;现在来看，AOSC 的设计哲学和 Arch Linux 颇有几分相似，贴近上游、不过多给自己添戏的作风与国内一众发行版迥异，其搭载的 oma 包管理界面也确实让 apt/dpkg 的使用变得更加轻松。 唯一的不足体现在 depolykit 暂时还不是很完备，没有多语言支持、报错信息甚至会被挡住，不过这些问题无伤大雅。&#xA;作为一个小众发行版，安同将近十年的连续开发和类似于国外主流发行版的社区氛围，都体现了开发团队的确认真在做一个“有趣”、“好用”的系统。&#xA;希望安同能在龙架构慢慢被爱好者发掘、把玩的时代背景下，发展出一个更有生命力的社区； 另外今年开源之夏似乎有 AOSC 的项目，不过不知道 if thers&amp;rsquo;s anything I can help&amp;hellip;. 七月份有 AOSCC, 很难得在国内能聚集一帮喜欢玩 Linux 的人，或许我们？七月见！</description>
    </item>
    <item>
      <title>试着写一个更好的校园网认证客户端</title>
      <link>https://diredocks.github.io/blog/posts/attempting-implement-better-campus-net-client/</link>
      <pubDate>Sun, 21 Apr 2024 00:02:42 +0800</pubDate>
      <guid>https://diredocks.github.io/blog/posts/attempting-implement-better-campus-net-client/</guid>
      <description>我一直在用 bitdust 的 njit8021xclient，除了一开始的反编译过程令我痛苦无比，后面的使用非常非常顺畅，基本上没出过什么大岔子。校园网的计费系统和行为管理系统是分开的，所以上学期几次被封也不是认证的锅。&#xA;这个开源的新华三 802.1X 客户端经历了十几年松散的开发，从代码上来看比较丑陋，不过用着没问题，我也就没想着折腾它。而希望能重写一个更好的客户端的念头来源于我最近的 C++ 学习，光看教程十分枯燥，我想着多少写点有用的东西。&#xA;我没有接触过网络编程，对 C/C++ 体系里的各种工具也不是很适应，CMake 咋用、各种库咋调都不是很清楚，更要命的是，我读过前述项目代码之后发现：它已经十分简洁了，虽然丑陋，但代码足够简单和清晰，并且基本上算是零依赖：除了 libpcap 和 openssl。不过这也是让我有点疑惑的点：它既调用了 openssl, 又自己实现了一些相关的功能，大概是十几年间接续开发的历史遗留问题吧。如果我用 C++ 重写，说不定整出来一个性能和体积都不如这个版本的垃圾东西&amp;hellip;&#xA;现在似乎没有多少高校使用新华三的 802.1X 认证了，即使做出来估计也没多少人会用，何况这类客户端绕不开对原版客户端的二进制逆向，使用门槛比较高，唯一能寄希望的就是某一位使用者能把他环境里的字典数据逆向出来，分享给同环境（单位、学校）的人用。&#xA;或许等我学得再深入些，能开发一个自动 crack 原版客户端、提取字典的程序？哈哈。&#xA;我目前的工作集中在理解协议设计上，整理好认证包和认证流程之后，就可以试着熟悉 C++ 生态（构建系统、包管理）了。&#xA;说是学业繁重，其实有时候希望学校少开点课程该多好，因为就算开这么些课也是考试前抱佛脚，平常不学习多少有点惶惶不可终日，但是又不想学习，只想干自己的事情。&#xA;至于自己的事情是啥？估计就是这些破事水和重复造轮子的项目吧。&#xA;ԅ(¯﹃¯ԅ)&#xA;悄悄在这&#xA;卖个萌&#xA;应该&#xA;不会有人&#xA;发现&amp;hellip;</description>
    </item>
    <item>
      <title>Another Boring Hello World Post</title>
      <link>https://diredocks.github.io/blog/posts/hello-world/</link>
      <pubDate>Tue, 16 Apr 2024 13:05:13 +0800</pubDate>
      <guid>https://diredocks.github.io/blog/posts/hello-world/</guid>
      <description>很多事情该说不说，最后烂在肚子里就不想说了，说实话，这么些年下来 我的表达欲慢慢在降低。我说或者不说又有什么用呢？说得太多， 反而容易被识破、戳穿。&#xA;为什么我连自我表达都开始焦虑？&#xA;社交媒体的侵略性太强，在荧屏面前，好像你不得不点赞、转发、评论， 才能显得你在乎某个人。&#xA;我觉得这样挺没劲的。&#xA;讨好自己， 现实逃避。&#xA;不知不觉，&#xA;抽离。&#xA;漫天的是非， 做我的真理。&#xA;一团和气，&#xA;处事道理。&#xA;遮遮掩掩——&#xA;脸皮&#xA;其实都自卑&amp;hellip;&#xA;其实都自欺&amp;hellip;&#xA;我懒得被关注，只想引人注意，所以我还是写写博客吧。</description>
    </item>
  </channel>
</rss>
